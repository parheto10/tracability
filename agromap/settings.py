
"""
Django settings for agromap project.

Generated by 'django-admin startproject' using Django 3.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'jr_(ryocv(7hsx_2li5rknjcjsj+2!+v#4@mrwtu3f*1#@n&m7'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

SEND_BROKEN_LINK_EMAILS = True
ADMINS = (
    ('TOURE', 'parheto10@gmail.com'),
)
MANAGERS = ADMINS

# EMAIL_HOST = "smtp.gmail.com"
# EMAIL_PORT = 587
# EMAIL_HOST_PASSWORD = "mietchomel@10#"
# EMAIL_HOST_USER = "parheto10@gmail.com"
# EMAIL_USE_TLS = True


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # other App
    # 'ajax_select',
    'django_select2',
    'bootstrap4',
    'widget_tweaks',
    'import_export',
    'sorl.thumbnail',
    'livereload',
    # 'leaflet',
    # 'geojson',
    # 'djgeojson',

    'chocolotiers.apps.ChocolotiersConfig',
    "communaute.apps.CommunauteConfig",
    'cooperatives.apps.CooperativesConfig',
    'parametres.apps.ParametresConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'livereload.middleware.LiveReloadScript',
]

ROOT_URLCONF = 'agromap.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'agromap.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, "db.sqlite3"),#BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'fr-fr'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]
# ENV_PATH = os.path.dirname(BASE_DIR)
STATIC_ROOT = (os.path.join(BASE_DIR, 'static', 'assets'))

MEDIA_URL = "/media/"
MEDIA_ROOT = (os.path.join(BASE_DIR, 'static', 'medias'))

LEAFLET_CONFIG = {
#you can use your own
"DEFAULT_CENTER" : (5.349390, -4.017050),
"DEFAULT_ZOOM" : 8,
"MAX_ZOOM" : 20,
"MIN_ZOOM" : 3,
"ATTRIBUTION_PREFIX" : "Liste des Parcelles"
}

SERIALIZATION_MODULES = {
    "geojson": "django.contrib.gis.serializers.geojson",
 }

map_attrs = {
    "style": "mapbox://styles/mapbox/outdoors-v11",
    "zoom": 6,
    "center": [-4.018685041153759, 5.3259941660067085],
    "cursor_style": 'pointer',
    "marker_color": "blue",
    "rotate": True,
    "geocoder": True,
    "fullscreen_button": True,
    "navigation_buttons": True,
    "track_location_button": True,
    "readonly": True,
    "placeholder": "Emplacement",
    'attribution_prefix': 'SYGEL - @TMG',
}

MAPBOX_KEY = "pk.eyJ1IjoicGFyaGV0bzEwIiwiYSI6ImNraTc4ZGxwbzR2MDkyc2t6amg5NnJsZmUifQ.cv4Fl-oi-_CDb213jxBFEg"


# AJAX_LOOKUP_CHANNELS = {
#     # simplest way, automatically construct a search channel by passing a dict
#     'label': {'model': 'cooperatives.label', 'search_field': 'name'},
#
#     # Custom channels are specified with a tuple
#     # channel: ( module.where_lookup_is, ClassNameOfLookup )
#     'person': ('cooperatives.lookups', 'PersonLookup'),
#     'group': ('example.lookups', 'GroupLookup'),
#     'song': ('example.lookups', 'SongLookup'),
# }

# CACHES = {
#     # â€¦ default cache config and others
#     "default": {
#         "BACKEND": "django_redis.cache.RedisCache",
#         "LOCATION": "redis://127.0.0.1:6379",
#         "OPTIONS": {
#             "CLIENT_CLASS": "django_redis.client.DefaultClient",
#         }
#     },
#
#     "select2": {
#         "BACKEND": "django_redis.cache.RedisCache",
#         "LOCATION": "redis://127.0.0.1:6379/1",
#         "OPTIONS": {
#             "CLIENT_CLASS": "django_redis.client.DefaultClient",
#         }
#     }
#}

# Tell select2 which cache configuration to use:
#SELECT2_CACHE_BACKEND = "select2"
